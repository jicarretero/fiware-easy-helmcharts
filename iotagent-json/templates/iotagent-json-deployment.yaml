apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.iotagent_json.metadata.name }}
  labels:
    name: {{ .Values.iotagent_json.label.name }}
  
spec:
  selector:
    matchLabels:
      name: {{ .Values.iotagent_json.label.name }}
  template:
    metadata:
      name: {{ .Values.iotagent_json.metadata.name }}
      labels:
        name: {{ .Values.iotagent_json.label.name }}
    spec:
      containers:
      - name: iotagent-json
        image: {{ .Values.iotagent_json.image }}
        imagePullPolicy: Always
        env:
        - name: IOTA_CB_HOST
          value: "{{ .Values.iotagent_json.orionld_host }}"
        - name: IOTA_CB_PORT
          value: "{{ .Values.iotagent_json.orionld_port }}"
        - name: IOTA_NORTH_PORT
          value: "{{ .Values.iotagent_json.iota_config_port }}"
        - name: IOTA_REGISTRY_TYPE
          value: mongodb
        - name: IOTA_LOG_LEVEL
          value: DEBUG
        - name: IOTA_TIMESTAMP
          value: "true"
        - name: IOTA_CB_NGSI_VERSION
          value: ld
        - name: IOTA_AUTOCAST
          value: "true"
        - name: IOTA_MONGO_HOST
          value: "{{ .Values.iotagent_json.mongodb_host }}"
        - name: IOTA_MONGO_PORT
          value: "27017"
        - name: IOTA_MONGO_DB
          value: "{{ .Values.iotagent_json.mongodb_db }}"
        {{ if .Values.iotagent_json.transport.http }}
        - name: IOTA_HTTP_PORT
          value: "{{ .Values.iotagent_json.iota_httpport }}"
        {{ end }}
        {{ if .Values.iotagent_json.transport.mqtt }}
        - name: IOTA_MQTT_PORT
          value: "{{ .Values.iotagent_json.iota_mqtt_port }}"
        - name: IOTA_MQTT_HOST
          value: "{{ .Values.iotagent_json.iota_mqtt_host }}"
        {{ if hasKey .Values.iotagent_json "iot_mqtt_username" }}
        - name: IOTA_MQTT_USERNAME
          value: "{{ .Values.iotagent_json.iota_mqtt_username }}"
        - name: IOTA_MQTT_PASSWORD
          value: "{{ .Values.iotagent_json.iota_mqtt_password }}"
        {{ end }}
        {{ end }}
        - name: IOTA_PROVIDER_URL
          value: "{{ .Values.iotagent_json.iota_provider_url }}"
        - name: IOTA_DEFAULT_RESOURCE
          value: "{{ .Values.iotagent_json.iota_default_resource }}"
        - name: IOTA_JSON_LD_CONTEXT
          value: "{{ .Values.iotagent_json.iota_ld_context }}"
        - name: IOTA_FALLBACK_TENANT
          value: "{{ .Values.iotagent_json.iota_fallback_tenant }}"
        - name: IOTA_MULTI_CORE
          value: "true"
        ports:
        - containerPort: {{ .Values.iotagent_json.iota_config_port }}
        - containerPort: {{ .Values.iotagent_json.iota_httpport }}
      {{ if .Values.iotagent_json.sidecar.enabled }}
      - name: {{ .Values.iotagent_json.sidecar.name }}
        image: {{ .Values.iotagent_json.sidecar.image }}
        env:
        - name: CONTEXT_BROKER
          value: {{ .Values.iotagent_json.sidecar.broker_url }}
        - name: WALLET_TYPE
          value: vault
        - name: WALLET_TOKEN
          value: {{ .Values.iotagent_json.sidecar.wallet.token }}
        - name: WALLET_ADDRESS
          value: {{ .Values.iotagent_json.sidecar.wallet.address }}
        - name: ACCEPT_ENCODING
          value: "identity"
        - name: PORT
          value: "{{ .Values.iotagent_json.sidecar.port }}"
        {{ if .Values.iotagent_json.sidecar.debug }}
        - name: DEBUG
          value: "broker:*"
        {{- end}}
      {{- end }}
