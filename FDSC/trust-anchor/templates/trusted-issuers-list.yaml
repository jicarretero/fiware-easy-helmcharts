apiVersion: apps/v1
kind: Deployment
metadata:
  name: trusted-issuers-list
spec:
  selector:
    matchLabels:
      app: {{ .Values.til.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.til.name }}
    spec:
      containers:
      - image: {{ .Values.til.image }}
        imagePullPolicy: "IfNotPresent"
        name: {{ .Values.til.name }}
        env:
            - name: ENDPOINTS_ALL_PORT
              value: "{{ .Values.til.ENDPOINTS_ALL_PORT }}"
            - name: MICRONAUT_SERVER_PORT
              value: "{{ .Values.til.SERVER_PORT }}"
            - name: MICRONAUT_METRICS_ENABLED
              value: "true"
            - name: DATASOURCES_DEFAULT_URL
              value: "{{ .Values.til.jdbc_connection }}"
            - name: DATASOURCES_DEFAULT_DRIVER_CLASS_NAME
              value: "com.mysql.cj.jdbc.Driver"
            - name: DATASOURCES_DEFAULT_USERNAME
              value: "root"
            - name: DATASOURCES_DEFAULT_DIALECT
              value: "MYSQL"
            - name: DATASOURCES_DEFAULT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-database-secret
                  key: mysql-root-password
        ports:
          - name: http
            containerPort: {{ .Values.til.SERVER_PORT }}
            protocol: TCP
          - name: http-health
            containerPort: {{ .Values.til.ENDPOINTS_ALL_PORT }}
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /health
            port: http-health
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: http-health
          initialDelaySeconds: 31
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
---

apiVersion: v1
kind: Service
metadata:
  name: trusted-issuers-list
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  selector:
    app: trusted-issuers-list

{{ if .Values.til.ingress }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tir-til
  labels:
    app: trusted-issuers-list
spec:
  rules:
  - host: "fwtil.apps.p2code-testbed.rh-horizon.eu"
    http:
      paths:
      - path: /issuer
        pathType: Prefix
        backend:
          service:
            name: tir
            port:
              number: 8080

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tir-tir
  labels:
    app: trusted-issuers-list
spec:
  rules:
  - host: "fwtir.apps.p2code-testbed.rh-horizon.eu"
    http:
      paths:
      - path: /v4/issuers
        pathType: Prefix
        backend:
          service:
            name: tir
            port:
              number: 8080
{{- end }}
